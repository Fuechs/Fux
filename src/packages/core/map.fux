package core;

map {

    tempalte<K, V>
    :KeyPair::(K key, V value);

    template<K, V>
    :KeyMap {
        ::() {
            intern self.keymap: KeyPair<K, V>[] = {};
        }

        operator[](final key: K) -> V {
            // ineffecient af idk
            for (pair: KeyPare<K, V> in self.keymap)
                if (pair.key == key)
                    return pair.value;
        }

        operator[]<<(_map -> KeyMap, final key: K, final value: V): KeyMap {
            _map.keymap[] << KeyPair<K, V>(key, value);
            return _map;
        }
    }
}