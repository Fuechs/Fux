macro area {
    (a: expr, b: expr, c: expr) -> a * b * c;
    (a: expr, b: expr) -> a * b;
    (a: expr) -> a;
    (*) -> compiler_error("area requires 1-3 arguments");
}

macro pi -> 3.14159265359;

macro def (type_: type, symbol: ident, value: expr) -> {
    symbol: type_ = expr;
    return symbol;
}

y := def(f64, x, area(pi, pi, pi));